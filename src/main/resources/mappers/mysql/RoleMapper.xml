<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.mappers.RoleMapper">
<resultMap type="com.web.entity.Role" id="BaseResultMap">
<id column="ID" property="id"/>
<result column="rolecode" property="roleCode"/>
<result column="rolename" property="roleName"/>
<result column="update_name" property="updateName"/>
<result column="update_date" property="updateDate"/>
<result column="create_name" property="createName"/>
<result column="create_date" property="createDate"/>
</resultMap>
 <sql id="Example_Where_Clause" >
  <!--
    WARNING - @mbggenerated
    This element is automatically generated by MyBatis Generator, do not modify.
  -->
  <where >
   <foreach collection="oredCriteria" item="criteria" separator="or" >
    <if test="criteria.valid" >
     <trim prefix="(" suffix=")" prefixOverrides="and" >
      <foreach collection="criteria.criteria" item="criterion" >
       <choose >
        <when test="criterion.noValue" >
         and ${criterion.condition}
        </when>
        <when test="criterion.singleValue" >
         and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue" >
         and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue" >
         and ${criterion.condition}
         <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
          #{listItem}
         </foreach>
        </when>
       </choose>
      </foreach>
     </trim>
    </if>
   </foreach>
  </where>
 </sql>
 <sql id="Update_By_Example_Where_Clause" >
  <!--
    WARNING - @mbggenerated
    This element is automatically generated by MyBatis Generator, do not modify.
  -->
  <where >
   <foreach collection="example.oredCriteria" item="criteria" separator="or" >
    <if test="criteria.valid" >
     <trim prefix="(" suffix=")" prefixOverrides="and" >
      <foreach collection="criteria.criteria" item="criterion" >
       <choose >
        <when test="criterion.noValue" >
         and ${criterion.condition}
        </when>
        <when test="criterion.singleValue" >
         and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue" >
         and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue" >
         and ${criterion.condition}
         <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
          #{listItem}
         </foreach>
        </when>
       </choose>
      </foreach>
     </trim>
    </if>
   </foreach>
  </where>
 </sql>
 <sql id="Base_Column_List" >
  <!--
    WARNING - @mbggenerated
    This element is automatically generated by MyBatis Generator, do not modify.
  -->
  ID, rolecode, rolename, update_name, update_date, create_name, create_date
 </sql>
 <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.web.example.RoleExample" >
  <!--
    WARNING - @mbggenerated
    This element is automatically generated by MyBatis Generator, do not modify.
  -->
  select
  <if test="distinct" >
   distinct
  </if>
  <include refid="Base_Column_List" />
  from t_s_role
  <if test="_parameter != null" >
   <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null" >
   order by ${orderByClause}
  </if>
 </select>
 <select id="countByExample" parameterType="com.web.example.RoleExample" resultType="java.lang.Integer" >
  <!--
    WARNING - @mbggenerated
    This element is automatically generated by MyBatis Generator, do not modify.
  -->
  select count(*) from t_s_role
  <if test="_parameter != null" >
   <include refid="Example_Where_Clause" />
  </if>
 </select>

<insert id="save" parameterType="Object">
insert into t_s_role(
ID,
rolecode,
rolename,
create_name,
create_date
) values(
#{id},
#{roleCode},
#{roleName},
#{createName},
#{createDate}
)
</insert>

<update id="update" parameterType="Object">
update t_s_role set
rolecode=#{roleCode},
rolename=#{rolename},
update_name=#{updateName},
update_date=#{updateDate}
where id=#{id}
</update>

<select id="getAll" resultMap="BaseResultMap">
 select * from t_s_role;
</select>

<select id="selectOneById" parameterType="Object" resultMap="BaseResultMap">
select * from t_s_role where id=#{id}
</select>


</mapper>