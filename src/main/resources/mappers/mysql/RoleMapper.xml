<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.mappers.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.web.entity.Role" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="rolecode" property="rolecode" jdbcType="VARCHAR" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="update_name" property="updateName" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="create_name" property="createName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, rolecode, rolename, update_name, update_date, create_name, create_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.web.example.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_s_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_s_role
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_s_role
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.example.RoleExample" >
    delete from t_s_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Role" >
    insert into t_s_role (ID, rolecode, rolename, 
      update_name, update_date, create_name, 
      create_date)
    values (#{id,jdbcType=VARCHAR}, #{rolecode,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, 
      #{updateName,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{createName,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Role" >
    insert into t_s_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="rolecode != null" >
        rolecode,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="updateName != null" >
        update_name,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="createName != null" >
        create_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="rolecode != null" >
        #{rolecode,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null" >
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createName != null" >
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.example.RoleExample" resultType="java.lang.Integer" >
    select count(*) from t_s_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_s_role
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.rolecode != null" >
        rolecode = #{record.rolecode,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null" >
        rolename = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.updateName != null" >
        update_name = #{record.updateName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createName != null" >
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_s_role
    set ID = #{record.id,jdbcType=VARCHAR},
      rolecode = #{record.rolecode,jdbcType=VARCHAR},
      rolename = #{record.rolename,jdbcType=VARCHAR},
      update_name = #{record.updateName,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      create_name = #{record.createName,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Role" >
    update t_s_role
    <set >
      <if test="rolecode != null" >
        rolecode = #{rolecode,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null" >
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createName != null" >
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Role" >
    update t_s_role
    set rolecode = #{rolecode,jdbcType=VARCHAR},
      rolename = #{rolename,jdbcType=VARCHAR},
      update_name = #{updateName,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_name = #{createName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <!--自定义查询-->
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select distinct
     r.ID ID, r.rolecode rolecode, r.rolename rolename, r.update_name update_name, r.update_date update_date, r.create_name create_name, r.create_date create_date
    from t_s_role r
    LEFT JOIN t_s_role_user ru ON ru.role_id=r.id
    <trim prefix="WHERE (" suffix=")" prefixOverrides="AND |OR ">
      <if test="id != null" >
        ru.user_id = #{id,jdbcType=VARCHAR}
      </if>
    </trim>
  </select>
</mapper>